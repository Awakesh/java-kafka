/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package co.lemnisk.common.avro.model.event.track.app;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ContextScreen extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -8967998046066964843L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ContextScreen\",\"namespace\":\"co.lemnisk.common.avro.model.event.track.app\",\"fields\":[{\"name\":\"width\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"height\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"density\",\"type\":\"string\",\"default\":\"\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ContextScreen> ENCODER =
      new BinaryMessageEncoder<ContextScreen>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ContextScreen> DECODER =
      new BinaryMessageDecoder<ContextScreen>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ContextScreen> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ContextScreen> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ContextScreen>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ContextScreen to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ContextScreen from a ByteBuffer. */
  public static ContextScreen fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence width;
  @Deprecated public java.lang.CharSequence height;
  @Deprecated public java.lang.CharSequence density;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ContextScreen() {}

  /**
   * All-args constructor.
   * @param width The new value for width
   * @param height The new value for height
   * @param density The new value for density
   */
  public ContextScreen(java.lang.CharSequence width, java.lang.CharSequence height, java.lang.CharSequence density) {
    this.width = width;
    this.height = height;
    this.density = density;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return width;
    case 1: return height;
    case 2: return density;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: width = (java.lang.CharSequence)value$; break;
    case 1: height = (java.lang.CharSequence)value$; break;
    case 2: density = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'width' field.
   * @return The value of the 'width' field.
   */
  public java.lang.CharSequence getWidth() {
    return width;
  }

  /**
   * Sets the value of the 'width' field.
   * @param value the value to set.
   */
  public void setWidth(java.lang.CharSequence value) {
    this.width = value;
  }

  /**
   * Gets the value of the 'height' field.
   * @return The value of the 'height' field.
   */
  public java.lang.CharSequence getHeight() {
    return height;
  }

  /**
   * Sets the value of the 'height' field.
   * @param value the value to set.
   */
  public void setHeight(java.lang.CharSequence value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'density' field.
   * @return The value of the 'density' field.
   */
  public java.lang.CharSequence getDensity() {
    return density;
  }

  /**
   * Sets the value of the 'density' field.
   * @param value the value to set.
   */
  public void setDensity(java.lang.CharSequence value) {
    this.density = value;
  }

  /**
   * Creates a new ContextScreen RecordBuilder.
   * @return A new ContextScreen RecordBuilder
   */
  public static co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder newBuilder() {
    return new co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder();
  }

  /**
   * Creates a new ContextScreen RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ContextScreen RecordBuilder
   */
  public static co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder newBuilder(co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder other) {
    return new co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder(other);
  }

  /**
   * Creates a new ContextScreen RecordBuilder by copying an existing ContextScreen instance.
   * @param other The existing instance to copy.
   * @return A new ContextScreen RecordBuilder
   */
  public static co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder newBuilder(co.lemnisk.common.avro.model.event.track.app.ContextScreen other) {
    return new co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder(other);
  }

  /**
   * RecordBuilder for ContextScreen instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ContextScreen>
    implements org.apache.avro.data.RecordBuilder<ContextScreen> {

    private java.lang.CharSequence width;
    private java.lang.CharSequence height;
    private java.lang.CharSequence density;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.width)) {
        this.width = data().deepCopy(fields()[0].schema(), other.width);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.height)) {
        this.height = data().deepCopy(fields()[1].schema(), other.height);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.density)) {
        this.density = data().deepCopy(fields()[2].schema(), other.density);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ContextScreen instance
     * @param other The existing instance to copy.
     */
    private Builder(co.lemnisk.common.avro.model.event.track.app.ContextScreen other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.width)) {
        this.width = data().deepCopy(fields()[0].schema(), other.width);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.height)) {
        this.height = data().deepCopy(fields()[1].schema(), other.height);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.density)) {
        this.density = data().deepCopy(fields()[2].schema(), other.density);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'width' field.
      * @return The value.
      */
    public java.lang.CharSequence getWidth() {
      return width;
    }

    /**
      * Sets the value of the 'width' field.
      * @param value The value of 'width'.
      * @return This builder.
      */
    public co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder setWidth(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.width = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'width' field has been set.
      * @return True if the 'width' field has been set, false otherwise.
      */
    public boolean hasWidth() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'width' field.
      * @return This builder.
      */
    public co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder clearWidth() {
      width = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'height' field.
      * @return The value.
      */
    public java.lang.CharSequence getHeight() {
      return height;
    }

    /**
      * Sets the value of the 'height' field.
      * @param value The value of 'height'.
      * @return This builder.
      */
    public co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder setHeight(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.height = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'height' field has been set.
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'height' field.
      * @return This builder.
      */
    public co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder clearHeight() {
      height = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'density' field.
      * @return The value.
      */
    public java.lang.CharSequence getDensity() {
      return density;
    }

    /**
      * Sets the value of the 'density' field.
      * @param value The value of 'density'.
      * @return This builder.
      */
    public co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder setDensity(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.density = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'density' field has been set.
      * @return True if the 'density' field has been set, false otherwise.
      */
    public boolean hasDensity() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'density' field.
      * @return This builder.
      */
    public co.lemnisk.common.avro.model.event.track.app.ContextScreen.Builder clearDensity() {
      density = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ContextScreen build() {
      try {
        ContextScreen record = new ContextScreen();
        record.width = fieldSetFlags()[0] ? this.width : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.height = fieldSetFlags()[1] ? this.height : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.density = fieldSetFlags()[2] ? this.density : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ContextScreen>
    WRITER$ = (org.apache.avro.io.DatumWriter<ContextScreen>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ContextScreen>
    READER$ = (org.apache.avro.io.DatumReader<ContextScreen>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
